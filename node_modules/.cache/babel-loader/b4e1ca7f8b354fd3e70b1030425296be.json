{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\John Perkins\\\\Documents\\\\Coding\\\\Projects\\\\bookshelf\\\\bookshelf\\\\src\\\\pages\\\\AddList.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState, useEffect } from 'react';\nimport defaultImage from '../assets/default-image.png';\nimport UserDropDown from \"../components/UserDropDown\";\nimport \"./AddList.css\";\nexport default function AddList() {\n  _s();\n\n  const [book, setBook] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [apiKey, setapiKey] = useState(\"AIzaSyDz2I7ZkOYGa4ZAkMrVE_aT7HBpapeuIII\");\n  const [lists, setLists] = useState([]);\n  const [listBooks, setListBooks] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [selectedShow, setSelectedShow] = useState(false);\n  const [addModal, setAddModal] = useState(false);\n  const [listName, setListName] = useState(\"\");\n  const [selectedBook, setSelectedBook] = useState({\n    title: \"\",\n    author: \"\",\n    image: \"\"\n  }); //Grad all the current users\n  // useEffect(() => {\n  //   console.log(currentUser)\n  //   if(currentUser){\n  //     let email = {\"email\":currentUser}\n  //     axios.post('http://localhost:5000/testusers/grablists',email)\n  //       .then(response => (setLists(response.data)))\n  //       .then(console.log(lists))\n  //   }\n  // },[currentUser])\n  //Search Google books Api\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const book = e.target.value;\n    setBook(book.trim());\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + book + \"&key=\" + apiKey + \"&maxResults=40\").then(data => {\n      setResult(data.data.items);\n    });\n  } //Open the add new list form\n\n\n  function handleAddModal() {\n    setAddModal(true);\n  } //Adds a book to the temporary list\n\n\n  function handleBook(Book) {\n    const authorArray = Book.volumeInfo.authors;\n    const newBook = {\n      title: Book.volumeInfo.title,\n      author: authorArray.join(),\n      image: Book.volumeInfo.imageLinks.thumbnail\n    };\n    setListBooks([...listBooks, newBook]);\n    console.log(listBooks);\n  } //Adds a new Book to the Book schema\n\n\n  async function handleAddBook() {\n    let info = {\n      \"book\": selectedBook,\n      \"email\": currentUser\n    };\n\n    try {\n      axios.put('http://localhost:5000/testusers/addBookToUser', info).then(res => {\n        console.log(res);\n      });\n    } catch (e) {\n      console.error(e);\n    }\n\n    setSelectedShow(false);\n  } //Adds a new List to the Book schema\n\n\n  async function handleAddList(e) {\n    e.preventDefault();\n    let info = {\n      \"books\": listBooks,\n      \"email\": currentUser,\n      \"title\": listName\n    };\n\n    try {\n      axios.put('http://localhost:5000/testusers/addListToUser', info).then(res => {\n        console.log(res);\n      });\n    } catch (e) {\n      console.error(e);\n    }\n\n    setAddModal(false);\n    setListBooks([]);\n    setListName(\"\");\n  } //Displays the current list of selected books\n\n\n  const ListBookDisplay = ({\n    book\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: book.image,\n        alt: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBook(book),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }; //Displays the searched books from Google Books API\n\n\n  const SearchedBook = ({\n    book\n  }) => {\n    const url = book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: url || defaultImage,\n        alt: book.volumeInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBook(book),\n          children: \"Add To List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add/Edit Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UserDropDown, {\n          setEmail: setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddModal,\n          className: \"btn btn-danger\",\n          children: \"Add New List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), addModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add new list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddList,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: listName,\n              onChange: e => setListName(e.target.value),\n              type: \"text\",\n              className: \"form-control mt-10\",\n              placeholder: \"List name\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), listBooks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add a book to get started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), listBooks.map(book => /*#__PURE__*/_jsxDEV(ListBookDisplay, {\n              book: book\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-danger\",\n              children: \"Save List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Lists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: handleSubmit,\n                type: \"text\",\n                className: \"form-control mt-10 form-inline\",\n                placeholder: \"Search for books\",\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), result.map(book => /*#__PURE__*/_jsxDEV(SearchedBook, {\n            book: book\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddList, \"QAevY1up7VX7GnubI/CIdksa63c=\");\n\n_c = AddList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddList\");","map":{"version":3,"sources":["C:/Users/John Perkins/Documents/Coding/Projects/bookshelf/bookshelf/src/pages/AddList.js"],"names":["axios","React","useState","useEffect","defaultImage","UserDropDown","AddList","book","setBook","result","setResult","apiKey","setapiKey","lists","setLists","listBooks","setListBooks","currentUser","setCurrentUser","selectedShow","setSelectedShow","addModal","setAddModal","listName","setListName","selectedBook","setSelectedBook","title","author","image","handleSubmit","e","preventDefault","target","value","trim","get","then","data","items","handleAddModal","handleBook","Book","authorArray","volumeInfo","authors","newBook","join","imageLinks","thumbnail","console","log","handleAddBook","info","put","res","error","handleAddList","ListBookDisplay","SearchedBook","url","length","map"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport defaultImage from '../assets/default-image.png';\r\nimport UserDropDown from \"../components/UserDropDown\"\r\nimport \"./AddList.css\"\r\n\r\nexport default function AddList() {\r\n\r\n  const [book, setBook] = useState(\"\")\r\n  const [result, setResult] = useState([])\r\n  const [apiKey, setapiKey] = useState(\"AIzaSyDz2I7ZkOYGa4ZAkMrVE_aT7HBpapeuIII\")\r\n  const [lists, setLists] = useState([])\r\n  const [listBooks, setListBooks] = useState([])\r\n  const [currentUser, setCurrentUser] = useState(\"\")\r\n  const [selectedShow, setSelectedShow] = useState(false)\r\n  const [addModal, setAddModal] = useState(false)\r\n  const [listName, setListName] = useState(\"\")\r\n  const [selectedBook, setSelectedBook] = useState({\r\n    title:\"\",\r\n    author:\"\",\r\n    image:\"\"\r\n  })\r\n\r\n\r\n  //Grad all the current users\r\n  // useEffect(() => {\r\n  //   console.log(currentUser)\r\n  //   if(currentUser){\r\n  //     let email = {\"email\":currentUser}\r\n  //     axios.post('http://localhost:5000/testusers/grablists',email)\r\n  //       .then(response => (setLists(response.data)))\r\n  //       .then(console.log(lists))\r\n  //   }\r\n  // },[currentUser])\r\n  \r\n\r\n\r\n  //Search Google books Api\r\n  function handleSubmit(e){\r\n    e.preventDefault()\r\n\r\n    const book = e.target.value\r\n      setBook(book.trim())\r\n\r\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+book+ \"&key=\"+apiKey+\"&maxResults=40\")\r\n      .then(data => {\r\n        setResult(data.data.items)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  //Open the add new list form\r\n  function handleAddModal(){\r\n    setAddModal(true)\r\n  }\r\n\r\n\r\n\r\n  //Adds a book to the temporary list\r\n  function handleBook(Book){\r\n    const authorArray = Book.volumeInfo.authors\r\n    const newBook = { title: Book.volumeInfo.title, author: authorArray.join(), image: Book.volumeInfo.imageLinks.thumbnail};\r\n    setListBooks([...listBooks, newBook])\r\n    console.log(listBooks)\r\n  }\r\n\r\n\r\n\r\n  //Adds a new Book to the Book schema\r\n  async function handleAddBook(){\r\n    let info = {\"book\":selectedBook, \"email\":currentUser}\r\n    try{\r\n    axios.put('http://localhost:5000/testusers/addBookToUser', info)\r\n      .then(res => { console.log(res)});\r\n    }catch(e){\r\n      console.error(e)\r\n    }\r\n    setSelectedShow(false)\r\n  }\r\n\r\n\r\n\r\n  //Adds a new List to the Book schema\r\n  async function handleAddList(e){\r\n    e.preventDefault()\r\n\r\n    let info = {\"books\":listBooks, \"email\":currentUser, \"title\":listName}\r\n    try{\r\n    axios.put('http://localhost:5000/testusers/addListToUser', info)\r\n      .then(res => { console.log(res)});\r\n    }catch(e){\r\n      console.error(e)\r\n    }\r\n\r\n    setAddModal(false)\r\n    setListBooks([])\r\n    setListName(\"\")\r\n  }\r\n\r\n\r\n\r\n  //Displays the current list of selected books\r\n  const ListBookDisplay = ({book}) => {\r\n    return(\r\n      <div className=\"d-inline-block\">\r\n        <img src={book.image} alt={book.title}/>\r\n        <div className=\"button\">\r\n          <button onClick={() => handleBook(book)}>Remove</button>\r\n        </div>  \r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  //Displays the searched books from Google Books API\r\n  const SearchedBook = ({book}) => {\r\n    const url = book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail\r\n    return(\r\n      <div className=\"d-inline-block\">\r\n        <img src={url || defaultImage} alt={book.volumeInfo.title}/>\r\n          <div className=\"button\">\r\n            <button onClick={() => handleBook(book)}>Add To List</button>\r\n            {/* <button onClick={handleAddBook}>Add To List</button> */}\r\n          </div>  \r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n\r\n        \r\n        <div className=\"row\">\r\n\r\n          {/* Left div */}\r\n          <div className=\"col-md-6\">\r\n\r\n\r\n            <h1>Add/Edit Lists</h1>\r\n            <UserDropDown setEmail={setCurrentUser}/>\r\n            <button onClick={handleAddModal} className=\"btn btn-danger\">Add New List</button>\r\n\r\n\r\n            {/* Add list form */}\r\n            {addModal &&(\r\n            <div className=\"pt-5\">\r\n              <h3>Add new list</h3>\r\n              <form onSubmit={handleAddList}>\r\n                <input \r\n                  value={listName}\r\n                  onChange={(e) => setListName(e.target.value)}    \r\n                  type=\"text\" \r\n                  className=\"form-control mt-10\" \r\n                  placeholder=\"List name\" \r\n                  autoComplete=\"off\"/>\r\n                \r\n                { listBooks.length === 0  && (\r\n                <p>Add a book to get started</p>\r\n                )}\r\n\r\n                {listBooks.map(book => (\r\n                  <ListBookDisplay book={book}/>\r\n                ))}\r\n\r\n                <button type=\"submit\" className=\"btn btn-danger\">Save List</button>\r\n              </form>\r\n            </div>)}\r\n\r\n\r\n\r\n            {/*Display users lists*/}\r\n            <div className=\"pt-5\">\r\n              <h3>Your Lists</h3>\r\n            </div>\r\n\r\n\r\n\r\n          </div> {/* Left div end */}\r\n\r\n\r\n          {/*Right Div*/}\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n\r\n\r\n              {/*Search google books API */}\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <input onChange={handleSubmit} type=\"text\" className=\"form-control mt-10 form-inline\" placeholder=\"Search for books\" autoComplete=\"off\"/>\r\n                </div>\r\n                {/* <button type=\"submit\" className=\"btn btn-danger\">Search</button> */}\r\n              </form>\r\n\r\n\r\n              {/*Display google books API results*/}\r\n              {result.map(book => (\r\n                  <SearchedBook book={book}/>\r\n                ))}\r\n\r\n\r\n\r\n            </div>\r\n          </div>{/*End of Right Div*/}\r\n         </div>\r\n      </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}