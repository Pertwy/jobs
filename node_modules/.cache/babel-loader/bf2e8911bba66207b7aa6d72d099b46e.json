{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\John Perkins\\\\Documents\\\\Coding\\\\Projects\\\\job-bored\\\\jobBored\\\\src\\\\pages\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './HomePage.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport JobPostFrontPage from \"../components/JobPostFrontPage\";\nexport default function HomePage() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"john@gmail.com\");\n  const [userData, setUserData] = useState({\n    books: [],\n    favorites: [],\n    readList: [],\n    lists: [],\n    following: []\n  });\n  const [jobPostList, setJobPostList] = useState([]);\n  const [listSize, setListSize] = useState(6);\n  const [postCode, setPostCode] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  useEffect(() => {\n    try {\n      axios.get(\"http://localhost:5000/jobPosts/\") //.then(response => console.log(response.data))\n      .then(response => setJobPostList(response.data));\n    } catch (error) {\n      console.log(\"Could not get job posts\");\n    }\n  }, [currentUser]); //Display all jobs\n\n  function JobList() {\n    return jobPostList.map(currentJobPost => {\n      return /*#__PURE__*/_jsxDEV(JobPostFrontPage, {\n        props: currentJobPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '50ch'\n      }\n    },\n    input: {\n      display: \"inline-block\",\n      margin: \"10px\"\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"example-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"example1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"central-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Find your dream job and let's move on\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: (classes.root, \"col-sm-6\"),\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"col-sm-3 form-text\",\n              id: \"standard-search\",\n              label: \"Job\",\n              type: \"search\",\n              onChange: ({\n                target\n              }) => setJob(target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"col-sm-3 form-text\",\n              id: \"standard-search\",\n              onChange: ({\n                target\n              }) => setPostCode(target.value),\n              label: \"Post Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"col-sm-3 form-text\",\n              id: \"standard-search\",\n              onChange: ({\n                target\n              }) => setSalary(target.value),\n              label: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"book-row-title\",\n          children: \"OPEN POSITONS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex justify-content-between\",\n          children: /*#__PURE__*/_jsxDEV(JobList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"0cRyQ2KARuKRpSLeNTxmOrdzxfw=\", true);\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/John Perkins/Documents/Coding/Projects/job-bored/jobBored/src/pages/HomePage.js"],"names":["React","useState","useEffect","Link","axios","makeStyles","TextField","Button","JobPostFrontPage","HomePage","books","setBooks","currentUser","setCurrentUser","userData","setUserData","favorites","readList","lists","following","jobPostList","setJobPostList","listSize","setListSize","postCode","setPostCode","job","setJob","salary","setSalary","get","then","response","data","error","console","log","JobList","map","currentJobPost","useStyles","theme","root","margin","spacing","width","input","display","classes","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './HomePage.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport JobPostFrontPage from \"../components/JobPostFrontPage\"\r\n\r\nexport default function HomePage(){\r\n  const [books, setBooks] = useState([])  \r\n  const [currentUser, setCurrentUser] = useState(\"john@gmail.com\")\r\n  const [userData, setUserData] = useState({books:[],favorites:[],readList:[],lists:[], following:[]})\r\n  const [jobPostList, setJobPostList] = useState([])\r\n  const [listSize, setListSize] = useState(6)\r\n  const [postCode, setPostCode] = useState(\"\")\r\n  const [job, setJob] = useState(\"\")\r\n  const [salary, setSalary] = useState(\"\")\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    try {\r\n      axios.get(\"http://localhost:5000/jobPosts/\")\r\n      //.then(response => console.log(response.data))\r\n      .then(response => (setJobPostList(response.data)))\r\n\r\n    } catch (error) {\r\n      console.log(\"Could not get job posts\")\r\n    }\r\n    \r\n  },[currentUser])\r\n\r\n\r\n\r\n  //Display all jobs\r\n  function JobList() {\r\n    return jobPostList.map(currentJobPost => {\r\n      return (\r\n        <JobPostFrontPage props={currentJobPost}/>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '50ch',\r\n      },\r\n    },\r\n    input:{\r\n      display:\"inline-block\",\r\n      margin:\"10px\"\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <div id=\"example-box\">\r\n        <div id=\"example1\">\r\n          <div className=\"central-box\">\r\n            <h3>Find your dream job and let's move on</h3>\r\n            \r\n            <form className={classes.root, \"col-sm-6\"} noValidate autoComplete=\"off\" >\r\n\r\n              {/* <div className={\"col-sm-3\"}>...</div> */}\r\n\r\n              <TextField className={\"col-sm-3 form-text\"} id=\"standard-search\" label=\"Job\" type=\"search\" \r\n                          onChange={({ target }) => setJob(target.value)} />\r\n\r\n\r\n              <TextField className={\"col-sm-3 form-text\"} id=\"standard-search\" onChange={({ target }) =>     \r\n                    setPostCode(target.value)} label=\"Post Code\" />\r\n\r\n              <TextField className={\"col-sm-3 form-text\"} id=\"standard-search\" onChange={({ target }) =>     \r\n                    setSalary(target.value)} label=\"Salary\" />\r\n\r\n              {/* <Button onClick={() => handleLogin()} variant=\"outlined\">\r\n                Log in\r\n              </Button> */}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n\r\n        <div className=\"container\">\r\n          <h2 className=\"book-row-title\">OPEN POSITONS</h2>\r\n          <div className=\"row d-flex justify-content-between\">\r\n            <JobList/>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}