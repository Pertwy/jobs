{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\John Perkins\\\\Documents\\\\Coding\\\\Projects\\\\bookshelf\\\\bookshelf\\\\src\\\\pages\\\\AddList.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState, useEffect } from 'react';\nimport defaultImage from '../assets/default-image.png';\nimport UserDropDown from \"../components/UserDropDown\";\nimport DisplayList from \"../components/DisplayLists\";\nimport \"./AddList.css\"; // import \"./searchedBook.css\"\n\nexport default function AddList() {\n  _s();\n\n  const [book, setBook] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [apiKey, setapiKey] = useState(\"AIzaSyDz2I7ZkOYGa4ZAkMrVE_aT7HBpapeuIII\");\n  const [lists, setLists] = useState([]);\n  const [listBooks, setListBooks] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [selectedShow, setSelectedShow] = useState(false);\n  const [addModal, setAddModal] = useState(false);\n  const [listName, setListName] = useState(\"\");\n  const [selectedBook, setSelectedBook] = useState({\n    title: \"\",\n    author: \"\",\n    image: \"\"\n  }); //Grab all the current users\n\n  useEffect(() => {\n    console.log(currentUser);\n\n    if (currentUser) {\n      let email = {\n        \"email\": currentUser\n      };\n      axios.post('http://localhost:5000/testusers/grablists', email).then(response => setLists(response.data.lists));\n    }\n  }, [currentUser, addModal]); //Search Google books Api\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const book = e.target.value;\n    setBook(book.trim());\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + book + \"&key=\" + apiKey + \"&maxResults=40\").then(data => {\n      setResult(data.data.items);\n    });\n  } //Open the add new list form\n\n\n  function handleAddModal() {\n    setAddModal(true);\n  } //Adds a book to the temporary list\n\n\n  function handleBook(Book) {\n    const authorArray = Book.volumeInfo.authors;\n    const newBook = {\n      title: Book.volumeInfo.title,\n      author: authorArray.join(),\n      image: Book.volumeInfo.imageLinks.thumbnail\n    };\n    setListBooks([...listBooks, newBook]); // console.log(listBooks)\n  } //Adds a new Book to the Book schema\n\n\n  async function handleAddBook() {\n    let info = {\n      \"book\": selectedBook,\n      \"email\": currentUser\n    };\n\n    try {\n      axios.put('http://localhost:5000/testusers/addBookToUser', info).then(res => {\n        console.log(res);\n      });\n    } catch (e) {\n      console.error(e);\n    }\n\n    setSelectedShow(false);\n  } //Adds a new List to the Book schema\n\n\n  async function handleAddList(e) {\n    e.preventDefault();\n    let info = {\n      \"books\": listBooks,\n      \"email\": currentUser,\n      \"title\": listName\n    };\n    let test = {\n      \"books\": listBooks,\n      \"title\": listName\n    };\n    setList([...list, test]);\n\n    try {\n      axios.put('http://localhost:5000/testusers/addListToUser', info).then(res => {\n        console.log(res);\n      });\n    } catch (e) {\n      console.error(e);\n    }\n\n    setAddModal(false);\n    setListBooks([]);\n    setListName(\"\");\n  } //Displays users existing lists\n\n\n  const UsersExistingLists = ({\n    list\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: list.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), list.books.map(book => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: book.image,\n        alt: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this);\n  }; //Displays the current list of selected books\n\n\n  const ListBookDisplay = ({\n    book\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: book.image,\n        alt: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBook(book),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }; //Displays the searched books from Google Books API\n\n\n  const SearchedBook = ({\n    book\n  }) => {\n    const url = book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-inline-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: url || defaultImage,\n        alt: book.volumeInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBook(book),\n          children: \"Add To List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add/Edit Lists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UserDropDown, {\n          setEmail: setCurrentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddModal,\n          className: \"btn btn-danger\",\n          children: \"Add New List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), addModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add new list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddList,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: listName,\n              onChange: e => setListName(e.target.value),\n              type: \"text\",\n              className: \"form-control mt-10\",\n              placeholder: \"List name\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), listBooks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add a book to get started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), listBooks.map(book => /*#__PURE__*/_jsxDEV(ListBookDisplay, {\n              book: book\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-danger\",\n              children: \"Save List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Lists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DisplayList, {\n            lists: lists\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: handleSubmit,\n                type: \"text\",\n                className: \"form-control mt-10 form-inline\",\n                placeholder: \"Search for books\",\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), result.map(book => /*#__PURE__*/_jsxDEV(SearchedBook, {\n            book: book\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddList, \"haYLTgsTTgvItvHRpkqvxr1Upok=\");\n\n_c = AddList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddList\");","map":{"version":3,"sources":["C:/Users/John Perkins/Documents/Coding/Projects/bookshelf/bookshelf/src/pages/AddList.js"],"names":["axios","React","useState","useEffect","defaultImage","UserDropDown","DisplayList","AddList","book","setBook","result","setResult","apiKey","setapiKey","lists","setLists","listBooks","setListBooks","currentUser","setCurrentUser","selectedShow","setSelectedShow","addModal","setAddModal","listName","setListName","selectedBook","setSelectedBook","title","author","image","console","log","email","post","then","response","data","handleSubmit","e","preventDefault","target","value","trim","get","items","handleAddModal","handleBook","Book","authorArray","volumeInfo","authors","newBook","join","imageLinks","thumbnail","handleAddBook","info","put","res","error","handleAddList","test","setList","list","UsersExistingLists","books","map","ListBookDisplay","SearchedBook","url","length"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport defaultImage from '../assets/default-image.png';\r\nimport UserDropDown from \"../components/UserDropDown\"\r\nimport DisplayList from \"../components/DisplayLists\"\r\nimport \"./AddList.css\"\r\n// import \"./searchedBook.css\"\r\n\r\nexport default function AddList() {\r\n\r\n  const [book, setBook] = useState(\"\")\r\n  const [result, setResult] = useState([])\r\n  const [apiKey, setapiKey] = useState(\"AIzaSyDz2I7ZkOYGa4ZAkMrVE_aT7HBpapeuIII\")\r\n  const [lists, setLists] = useState([])\r\n  const [listBooks, setListBooks] = useState([])\r\n  const [currentUser, setCurrentUser] = useState(\"\")\r\n  const [selectedShow, setSelectedShow] = useState(false)\r\n  const [addModal, setAddModal] = useState(false)\r\n  const [listName, setListName] = useState(\"\")\r\n  const [selectedBook, setSelectedBook] = useState({\r\n    title:\"\",\r\n    author:\"\",\r\n    image:\"\"\r\n  })\r\n\r\n\r\n  //Grab all the current users\r\n  useEffect(() => {\r\n    console.log(currentUser)\r\n    if(currentUser){\r\n      let email = {\"email\":currentUser}\r\n      axios.post('http://localhost:5000/testusers/grablists',email)\r\n        .then(response => (setLists(response.data.lists)))\r\n    }\r\n  },[currentUser, addModal])\r\n  \r\n\r\n\r\n  //Search Google books Api\r\n  function handleSubmit(e){\r\n    e.preventDefault()\r\n\r\n    const book = e.target.value\r\n      setBook(book.trim())\r\n\r\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+book+ \"&key=\"+apiKey+\"&maxResults=40\")\r\n      .then(data => {\r\n        setResult(data.data.items)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  //Open the add new list form\r\n  function handleAddModal(){\r\n    setAddModal(true)\r\n  }\r\n\r\n\r\n\r\n  //Adds a book to the temporary list\r\n  function handleBook(Book){\r\n    const authorArray = Book.volumeInfo.authors\r\n    const newBook = { title: Book.volumeInfo.title, author: authorArray.join(), image: Book.volumeInfo.imageLinks.thumbnail};\r\n    setListBooks([...listBooks, newBook])\r\n    // console.log(listBooks)\r\n  }\r\n\r\n\r\n\r\n  //Adds a new Book to the Book schema\r\n  async function handleAddBook(){\r\n    let info = {\"book\":selectedBook, \"email\":currentUser}\r\n    \r\n    try{\r\n    axios.put('http://localhost:5000/testusers/addBookToUser', info)\r\n      .then(res => { console.log(res)});\r\n    }catch(e){\r\n      console.error(e)\r\n    }\r\n    setSelectedShow(false)\r\n  }\r\n\r\n\r\n\r\n  //Adds a new List to the Book schema\r\n  async function handleAddList(e){\r\n    e.preventDefault()\r\n    let info = {\"books\":listBooks, \"email\":currentUser, \"title\":listName}\r\n    let test = {\"books\":listBooks, \"title\":listName}\r\n    setList([...list, test])\r\n    \r\n    try{\r\n    axios.put('http://localhost:5000/testusers/addListToUser', info)\r\n      .then(res => { console.log(res)});\r\n    }catch(e){\r\n      console.error(e)\r\n    }\r\n\r\n    setAddModal(false)\r\n    setListBooks([])\r\n    setListName(\"\")\r\n  }\r\n\r\n\r\n//Displays users existing lists\r\nconst UsersExistingLists = ({list}) => {\r\n  return(\r\n    <div >\r\n      <h2>{list.title}</h2>\r\n      {list.books.map((book) => (\r\n        <img src={book.image} alt={book.title}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n  //Displays the current list of selected books\r\n  const ListBookDisplay = ({book}) => {\r\n    return(\r\n      <div className=\"d-inline-block\">\r\n        <img src={book.image} alt={book.title}/>\r\n        <div className=\"buttonDiv\">\r\n          <button onClick={() => handleBook(book)}>Remove</button>\r\n        </div>  \r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  //Displays the searched books from Google Books API\r\n  const SearchedBook = ({book}) => {\r\n    const url = book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail\r\n    return(\r\n      <div className=\"d-inline-block\">\r\n        <img src={url || defaultImage} alt={book.volumeInfo.title}/>\r\n          <div className=\"buttonDiv\">\r\n            <button onClick={() => handleBook(book)}>Add To List</button>\r\n            {/* <button onClick={handleAddBook}>Add To List</button> */}\r\n          </div>  \r\n      </div>\r\n    )\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n\r\n        \r\n        <div className=\"row\">\r\n\r\n          {/* Left div */}\r\n          <div className=\"col-md-6\">\r\n\r\n\r\n            <h1>Add/Edit Lists</h1>\r\n            <UserDropDown setEmail={setCurrentUser}/>\r\n            <button onClick={handleAddModal} className=\"btn btn-danger\">Add New List</button>\r\n\r\n\r\n            {/* Add list form */}\r\n            {addModal &&(\r\n            <div className=\"pt-5\">\r\n              <h3>Add new list</h3>\r\n              <form onSubmit={handleAddList}>\r\n                <input \r\n                  value={listName}\r\n                  onChange={(e) => setListName(e.target.value)}    \r\n                  type=\"text\" \r\n                  className=\"form-control mt-10\" \r\n                  placeholder=\"List name\" \r\n                  autoComplete=\"off\"/>\r\n                \r\n                { listBooks.length === 0  && (\r\n                <p>Add a book to get started</p>\r\n                )}\r\n\r\n                {listBooks.map(book => (\r\n                  <ListBookDisplay book={book}/>\r\n                ))}\r\n\r\n                <button type=\"submit\" className=\"btn btn-danger\">Save List</button>\r\n              </form>\r\n            </div>)}\r\n\r\n\r\n\r\n            {/*Display users lists*/}\r\n            <div className=\"pt-5\">\r\n              <h2>Your Lists</h2>\r\n              \r\n              <DisplayList lists={lists}/>\r\n            </div>\r\n          </div> {/* Left div end */}\r\n\r\n\r\n          {/*Right Div*/}\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n\r\n\r\n              {/*Search google books API */}\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <input onChange={handleSubmit} type=\"text\" className=\"form-control mt-10 form-inline\" placeholder=\"Search for books\" autoComplete=\"off\"/>\r\n                </div>\r\n                {/* <button type=\"submit\" className=\"btn btn-danger\">Search</button> */}\r\n              </form>\r\n\r\n\r\n              {/*Display google books API results*/}\r\n                {result.map(book => (\r\n                  <SearchedBook book={book}/>\r\n                ))}\r\n\r\n            </div>\r\n          </div>{/*End of Right Div*/}\r\n         </div>\r\n      </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}